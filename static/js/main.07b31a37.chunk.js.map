{"version":3,"sources":["components/UserCard.js","components/Repo.js","context/UserContext.js","pages/Home.js","pages/Signin.js","pages/Signup.js","pages/PageNotFound.js","components/Footer.js","components/Header.js","pages/Authentication.js","App.js","config/FirebaseConfig.js","reportWebVitals.js","index.js"],"names":["UserCard","user","Card","className","src","avatar_url","alt","CardBody","name","blog","location","email","bio","public_repos","followers","following","Repo","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","console","log","useEffect","ListGroup","map","repo","ListGroupItem","language","description","id","UserContext","createContext","Home","context","useContext","query","setQuery","setUser","uid","to","fetchDetails","toast","type","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","color","onClick","Signin","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","auth","getAuth","signInWithEmailAndPassword","then","res","catch","err","message","handleSignIn","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","Signup","createUserWithEmailAndPassword","handleSignup","PageNotFound","Footer","fluid","tag","Header","isOpen","SetIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","Authentication","outline","provider","GoogleAuthProvider","signInWithPopup","credentialFromResult","accessToken","error","errorCode","code","errorMessage","credentialFromError","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07b31a37.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, CardText, CardTitle } from \"reactstrap\";\r\n\r\nconst UserCard = ({ user }) => {\r\n  return (\r\n    <Card className=\"text-center mt-3  mb-4\">\r\n      <img\r\n        src={user.avatar_url}\r\n        alt=\"User Profile Picture\"\r\n        className=\"img-thumbnail\"\r\n      />\r\n      <CardBody>\r\n        <div className=\"text-primary\">{user.name}</div>\r\n        <div className=\"text-primary\">\r\n          Website: \"{user.blog}\"\r\n        </div>\r\n        <div className=\"text-primary\">Location: {user.location}</div>\r\n        <div className=\"text-primary\">Email: {user.email ? user.email : \"Not Available\"}</div>\r\n        <div className=\"text-primary\">{user.bio}</div>\r\n        <div className=\"text-primary\">\r\n          Number of Repositories: {user.public_repos}\r\n        </div>\r\n        <div className=\"text-primary\">Followers: {user.followers}</div>\r\n        <div className=\"text-primary\">Following: {user.following}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\n\r\nconst Repo = ({ repos_url }) => {\r\n  const [repos, setRepos] = useState([]);\r\n\r\n  const fetchRepos = async () => {\r\n    const { data } = await Axios.get(repos_url);\r\n    console.log(data);\r\n    setRepos(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRepos();\r\n  }, [repos_url]);\r\n\r\n  return (\r\n    <ListGroup>\r\n      {repos.map((repo) => (\r\n        <ListGroupItem key={repo.id}>\r\n          <div className=\"text-primary\">{repo.name}</div>\r\n          <div className=\"text-secondary\">{repo.language}</div>\r\n          <div className=\"text-info\">{repo.description}</div>\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Repo;\r\n","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(); ","import React, { useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\n\r\nimport UserCard from \"../components/UserCard\";\r\nimport Repo from \"../components/Repo\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Home = () => {\r\n  const context = useContext(UserContext);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  \r\n  //put everything behind login\r\n  if (!context.user?.uid) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  const fetchDetails = async () => {\r\n    try {\r\n      const { data } = await Axios.get(`https://api.github.com/users/${query}`);\r\n      setUser(data);\r\n      console.log(user);\r\n    } catch (error) {\r\n      toast(\"User Not Found!\", {\r\n        type: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\" mt-3\">\r\n        <Col md=\"5\">\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder=\"Please provide the username\"\r\n            />\r\n            <InputGroupAddon addonType=\"append\">\r\n              <Button color=\"primary\" onClick={fetchDetails}>\r\n                Fetch User\r\n              </Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n\r\n          {user ? <UserCard user={user} /> : null}\r\n        </Col>\r\n        <Col md=\"7\">{user ? <Repo repos_url={user.repos_url} /> : null}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter,\r\n  Badge\r\n} from \"reactstrap\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\nconst Signin = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  \r\n\r\n  const handleSignIn = () => {\r\n    const auth = getAuth();\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n        toast(\"Login Successful\", {\r\n          type: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message, {\r\n          type: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignIn();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  } else\r\n    return (\r\n      <Container className=\"text-center\">\r\n        <Row>\r\n          <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardHeader className=\"\">Sign In here</CardHeader>\r\n                <CardBody>\r\n                  <FormGroup row>\r\n                    <Label for=\"email\" sm={3}>\r\n                      Email\r\n                    </Label>\r\n                    <Col sm={9}>\r\n                      <Input\r\n                        type=\"email\"\r\n                        className=\"my-2\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"provide your email\"\r\n                        value={email}\r\n                        // value=\"a@gmail.com\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Label for=\"password\" sm={3}>\r\n                      Password\r\n                    </Label>\r\n                    <Col sm={9}>\r\n                      <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        className=\"my-2\"\r\n                        id=\"password\"\r\n                        placeholder=\"your password here\"\r\n                        value={password}\r\n                        // value=\"123456\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button type=\"submit\" className=\"mx-2\" block color=\"primary\">\r\n                    Sign In\r\n                  </Button>\r\n{/* \r\n                <Badge className=\"bg-danger mx-2\">OR</Badge>\r\n\r\n                  <Button\r\n                    className=\"mx-2 btn-success\" block  fluid\r\n                    onClick={handleGoogleSignIn}\r\n                  >\r\n                    Login with Google\r\n                  </Button> */}\r\n                </CardFooter>\r\n              </Form>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n};\r\nexport default Signin;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\nconst Signup = () => {\r\n  const context = useContext(UserContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  const handleSignup = () => {\r\n    const auth = getAuth();\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n        context.setUser({ email: res.user.email, uid: res.user.uid });\r\n        toast(\"User Created Successfully\", {\r\n          type: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast(err.message, {\r\n          type: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSignup();\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  } else\r\n    return (\r\n      <Container className=\"text-center\">\r\n        <Row>\r\n          <Col lg={6} className=\"offset-lg-3 mt-5\">\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardHeader className=\"\">Sign Up here</CardHeader>\r\n                <CardBody>\r\n                  <FormGroup row>\r\n                    <Label for=\"email\" sm={3}>\r\n                      Email\r\n                    </Label>\r\n                    <Col sm={9}>\r\n                      <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"provide your email\"\r\n                        value={email}\r\n                        className=\"my-2\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row>\r\n                    <Label for=\"password\" sm={3}>\r\n                      Password\r\n                    </Label>\r\n                    <Col sm={9}>\r\n                      <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"your password here\"\r\n                        className=\"my-2\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </FormGroup>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button type=\"submit\" block color=\"primary\">\r\n                    Sign Up\r\n                  </Button>\r\n                  {/* <Badge className=\"bg-danger mx-2\">OR</Badge>\r\n\r\n                  <Button\r\n                    className=\"mx-2 btn-success\"\r\n                    block\r\n                    fluid\r\n                    onClick={handleGoogleSignIn}\r\n                  >\r\n                    SignIn with Google\r\n                  </Button> */}\r\n                </CardFooter>\r\n              </Form>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n};\r\nexport default Signup;\r\n","import React from \"react\"; \r\n\r\nconst PageNotFound = () => {\r\nreturn (\r\n    <h1>Page Not Found</h1>\r\n)\r\n}\r\n\r\nexport default PageNotFound; ","import React from 'react'\r\nimport { Container } from 'reactstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Container fluid\r\n            tag = \"footer\"\r\n            className=\"text-center bg-info text-white text-uppercase fixed-bottom p-3\"\r\n        >\r\n           &copy; LCO github search appp with firebase \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useContext, useState } from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    NavbarText\r\n} from \"reactstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { UserContext } from '../context/UserContext';\r\nimport \"../App.css\"\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const context = useContext(UserContext);\r\n\r\n    const [isOpen, SetIsOpen] = useState(false);\r\n\r\n    const toggle = () => {\r\n        SetIsOpen(!isOpen);\r\n    }\r\n\r\n    // console.log(context); \r\n\r\n   \r\n\r\n    return (\r\n        <Navbar color=\"info\" light expand=\"sm\" >\r\n            <NavbarBrand><Link className=\"text-white myLink\" to=\"/\">Gitfire App</Link></NavbarBrand>\r\n\r\n            <NavbarText className=\"text-white\">{context.user?.email ? context.user.email : \"\"}</NavbarText>\r\n\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n\r\n                <Nav className=\"ml-auto\" navbar >\r\n                    {\r\n                        context.user ? \r\n                        (\r\n                            <NavItem>\r\n                                <NavLink onClick={() => {context.setUser(null)}}  className=\"text-white myLink\">Log Out</NavLink>\r\n                            </NavItem>\r\n                        ) :\r\n                        (\r\n                            <>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} to=\"/signup\" className=\"text-white \" >Sign Up</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} to=\"/signin\" className=\"text-white\">Sign In</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} to=\"/authenticate\" className=\"text-white \">Sign In with Google</NavLink>\r\n                                </NavItem>\r\n                            </>\r\n                        )\r\n                    }\r\n                </Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\nexport default Header;","import React, { useContext } from \"react\";\r\nimport { Button, Col, Container, Row } from \"reactstrap\";\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nexport default function Authentication() {\r\n  const context = useContext(UserContext);\r\n\r\n  const handleGoogleSignIn = () => {\r\n    const provider = new GoogleAuthProvider();\r\n    const auth = getAuth();\r\n    signInWithPopup(auth, provider)\r\n      .then((res) => {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        const credential = GoogleAuthProvider.credentialFromResult(res);\r\n        const token = credential.accessToken;\r\n        // The signed-in user info.\r\n        const user = res.user;\r\n        context.setUser(user);\r\n        toast(\"Login Successful\", {\r\n          type: \"success\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        const email = error.email;\r\n        // The AuthCredential type that was used.\r\n        const credential = GoogleAuthProvider.credentialFromError(error);\r\n        toast(errorCode + \" \" + errorMessage, {\r\n          type: \"error\",\r\n        });\r\n        console.log(errorMessage);\r\n      });\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to=\"/\" />;\r\n  } else\r\n    return (\r\n      <Container className=\"text-center\">\r\n        <Row>\r\n          {\" \"}\r\n          <Col className=\"md-6\">\r\n            {\" \"}\r\n            <Button\r\n              outline\r\n              className=\"my-5 p-3\"\r\n              block\r\n              color=\"info\"\r\n              onClick={handleGoogleSignIn}\r\n            >\r\n              Click to Sign In with Google\r\n            </Button>{\" \"}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Switch, BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\n//firebase\nimport { initializeApp } from \"firebase/app\";\nimport \"firebase/auth\";\nimport FirebaseConfig from \"./config/FirebaseConfig\";\n\n//components\nimport Home from \"./pages/Home\";\nimport Signin from \"./pages/Signin\";\nimport Signup from \"./pages/Signup\";\nimport { UserContext } from \"./context/UserContext\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Authentication from \"./pages/Authentication\";\n\n//init firebase\ninitializeApp(FirebaseConfig);\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <Router>\n      <ToastContainer />\n      <UserContext.Provider value={{ user, setUser }}>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/authenticate\" component={Authentication} />\n          <Route exact path=\"*\" component={PageNotFound} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n  );\n};\n\nexport default App;\n","export default {\r\n  apiKey: \"AIzaSyB6L62M4A47JW-2f1lwaCGLj2PXqA41Ivw\",\r\n  authDomain: \"fir-intro-f7850.firebaseapp.com\",\r\n  projectId: \"fir-intro-f7850\",\r\n  storageBucket: \"fir-intro-f7850.appspot.com\",\r\n  messagingSenderId: \"374897929121\",\r\n  appId: \"1:374897929121:web:cebab8d11a100e46f8b9e0\",\r\n  measurementId: \"G-P1VYG3FC0D\"\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}